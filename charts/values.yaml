# Default values for neoiot_emqx_hook.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: itsneo1990/neoiot_emqx_hook
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

env:
  POSTGRES_DSN: "postgres://neoiot:uTALXkhFg0@postgres-postgresql.neoiot.svc.cluster.local:5432/neoiot?sslmode=disable"
  KAFKA_BROKERS: "kafka.neoiot.svc.cluster.local:9092"
  ON_CLIENT_CONNECTED_TO_TOPIC: "emqx.events.client.connected"
  ON_CLIENT_DISCONNECTED_TO_TOPIC: "emqx.events.client.disconnected"
  ON_MESSAGE_PUBLISH_TO_TOPIC: "emqx.events.message.publish"
  #  ON_CLIENT_CONNECT_TO_TOPIC: "emqx.events.client.connect"
  #  ON_CLIENT_CONNACK_TO_TOPIC: "emqx.events.client.connack"
  #  ON_CLIENT_SUBSCRIBE_TO_TOPIC: "emqx.events.client.subscribe"
  #  ON_CLIENT_UNSUBSCRIBE_TO_TOPIC: "emqx.events.client.unsubscribe"
  #  ON_SESSION_CREATED_TO_TOPIC: "emqx.events.session.created"
  #  ON_SESSION_SUBSCRIBED_TO_TOPIC: "emqx.events.session.subscribed"
  #  ON_SESSION_UNSUBSCRIBED_TO_TOPIC: "emqx.events.session.unsubscribed"
  #  ON_MESSAGE_DELIVERED_TO_TOPIC: "emqx.events.message.delivered"
  #  ON_MESSAGE_ACKED_TO_TOPIC: "emqx.events.message.acked"
  #  ON_MESSAGE_DROPPED_TO_TOPIC: "emqx.events.message.dropped"

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: "emqx-exhook"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 10000

ingress:
  enabled: false
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          backend:
            serviceName: chart-example.local
            servicePort: 80
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }
